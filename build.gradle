plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'com.palantir.docker' version '0.35.0'
	id "com.palantir.docker-run" version "0.35.0"
}
apply plugin: 'io.spring.dependency-management'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

targetCompatibility = '19'
def dockerOwner = 'andreamedia'

java {
	sourceCompatibility = '19'
}

//jar {
//	manifest {
//		attributes(
//				'Main-Class': 'com.example.demo.DemoApplication'
//		)
//	}
//}
springBoot {
	buildInfo()
}
tasks.named("bootJar") {
	manifest {
		attributes 'Start-Class': 'com.example.demo.DemoApplication'
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// takes templatized Dockerfile, places into buildDir
task prepareDockerfileTemplate(type: Copy) {
	from "src/main/resources/docker"
	include "Dockerfile"
	filter { it.replaceAll('<%=name%>', project.name) }
	filter { it.replaceAll('<%=version%>', project.version) }
	into "$buildDir"
}
// add explicit dependencies, otherwise we get warning at console
dockerPrepare.dependsOn bootJar
bootJar.dependsOn prepareDockerfileTemplate
//bootJarMainClassName.dependsOn prepareDockerfileTemplate
//bootRunMainClassName.dependsOn prepareDockerfileTemplate

// https://plugins.gradle.org/plugin/com.palantir.docker
docker {
	name "backend_jsb"
	files "$buildDir/libs/${project.name}-${project.version}.jar"
	dockerfile file("$buildDir/Dockerfile")
}

// https://plugins.gradle.org/plugin/com.palantir.docker-run
dockerRun {
	name "backend_jsb"
	image "backend_jsb"
	ports '8080:8080','8081:8081'
	clean true
	daemonize false
	arguments '--hostname=localhost'
}
ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.1.2'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
