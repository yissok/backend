plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}
ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.1.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.1.3'
	implementation group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-springboot3', version: '2.0.0-M2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

///////////////////////////////////////////////////
//////////////////// GRAVEYARD ////////////////////
///////////////////////////////////////////////////

//gradle clean docker
//docker run -p 8080:8080 -d backend_jsb



//	id 'com.palantir.docker' version '0.35.0'
//	id "com.palantir.docker-run" version "0.35.0"
//def dockerOwner = 'andreamedia'



//// takes templatized Dockerfile, places into buildDir
//task prepareDockerfileTemplate(type: Copy) {
//	from "src/main/resources/docker"
//	include "Dockerfile"
//	filter { it.replaceAll('<%=name%>', project.name) }
//	filter { it.replaceAll('<%=version%>', project.version) }
//	into "$buildDir"
//}
//// add explicit dependencies, otherwise we get warning at console
//dockerPrepare.dependsOn bootJar
//bootJar.dependsOn prepareDockerfileTemplate
////bootJarMainClassName.dependsOn prepareDockerfileTemplate
////bootRunMainClassName.dependsOn prepareDockerfileTemplate
//
//// https://plugins.gradle.org/plugin/com.palantir.docker
//docker {
//	name "backend_jsb"
//	files "$buildDir/libs/${project.name}-${project.version}.jar"
//	dockerfile file("$buildDir/Dockerfile")
//}
//
//// https://plugins.gradle.org/plugin/com.palantir.docker-run
//dockerRun {
//	name "backend_jsb"
//	image "backend_jsb"
//	ports '8080:8080','8081:8081'
//	clean true
//	daemonize false
//	arguments '--hostname=localhost'
//}