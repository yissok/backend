name: Deploy to S3

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow on

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'corretto'
          java-version: '11'
          server-id: github

      - name: Set up Gradle
        uses: actions/setup-gradle@v2
        with:
          gradle-version: '7.0'

      - name: Install AWS CLI
        run: |
          sudo apt-get install -y unzip
          curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Build and deploy Spring Boot application to S3
        run: |
          ./gradlew clean build
          
          # Set your AWS credentials
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
          
          # Set your S3 bucket
          S3_BUCKET=my-s3-bucket
          
          # Set the S3_OBJECT_KEY based on your project structure
          S3_OBJECT_KEY="my-project/deployments/$(date +'%Y%m%d%H%M%S')"
          
          # Identify the executable JAR file generated by Gradle
          executable_jar=$(ls build/libs/*-SNAPSHOT.jar)
          
          # Upload the executable JAR to S3
          aws s3 cp "$executable_jar" "s3://$S3_BUCKET/$S3_OBJECT_KEY/$SPRING_BOOT_APP_NAME-executable.jar"
          
          echo "Spring Boot application executable JAR uploaded to S3 successfully."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: <your_region>
          SPRING_BOOT_APP_NAME: <your_spring_boot_app_name>
