---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ServerlessRestApiDeploymentANDREA:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ServerlessRestApi
      StageName: Stage
  BackendApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: aws-sam-cli-managed-default-samclisourcebucket-yyecaqf0jaid
        S3Key: mario/9fd3b98c2e2bd24405fec30db1462e20
      Handler: com.example.demo.StreamLambdaHandler::handleRequest
      MemorySize: 2048
      Role:
        Fn::GetAtt:
          - BackendApiFunctionRole
          - Arn
      Runtime: java21
      Timeout: 30
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: backend
          JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
          MONGODB_PASSWORD: DB_PW
      Architectures:
        - x86_64
      SnapStart:
        ApplyOn: PublishedVersions
  BackendApiFunctionHelloWorldPermissionProd:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: BackendApiFunctionAliasproduction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
          - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*
          - __ApiId__:
              Ref: ServerlessRestApi
            __Stage__: "*"
  BackendApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: cwpol
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  BackendApiFunctionVersionANDREA:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: BackendApiFunction
  ServerlessRestApiProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ServerlessRestApiDeploymentANDREA
      RestApiId:
        Ref: ServerlessRestApi
      StageName: Prod
  BackendApiFunctionAliasproduction:
    Type: AWS::Lambda::Alias
    Properties:
      Name: production
      FunctionName:
        Ref: BackendApiFunction
      FunctionVersion:
        Fn::GetAtt:
          - BackendApiFunctionVersionANDREA
          - Version
  ServerlessRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Body:
        info:
          version: '1.0'
          title:
            Ref: AWS::StackName
        paths:
          "/{proxy+}":
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BackendApiFunctionAliasproduction}/invocations
              responses: {}
        swagger: '2.0'
